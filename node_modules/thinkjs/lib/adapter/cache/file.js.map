{"version":3,"sources":["../../../src/adapter/cache/file.js"],"names":[],"mappings":"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","file":"file.js","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport path from 'path';\n\n/**\n * file store\n * @type {Class}\n */\nlet FileStore = think.adapter('store', 'file');\n\n/**\n * file cache\n */\nexport default class extends think.adapter.base {\n  /**\n   * init\n   * @param  {Object} options []\n   * @return {}         []\n   */\n  init(options){\n    \n    options = think.parseConfig(think.config('cache'), options);\n    \n    this.timeout = options.timeout;\n    this.file_ext = options.file_ext;\n    this.path = options.path;\n    this.path_depth = options.path_depth || 1;\n\n    this.store = new FileStore({\n      path: this.path\n    });\n\n    this.gcType = this.path;\n    think.gc(this);\n  }\n  /**\n   * get stored file path\n   * @return {String} []\n   */\n  getFilepath(name){\n    name = think.md5(name);\n    let dir = name.slice(0, this.path_depth).split('').join(path.sep);\n    return `${dir}${path.sep}${name}${this.file_ext}`;\n  }\n  /**\n   * get data\n   * @param  {String} name []\n   * @return {Promise}      []\n   */\n  get(name){\n    let filepath = this.getFilepath(name);\n    return this.store.get(filepath).then(data => {\n      if(!data){\n        return;\n      }\n      try{\n        data = JSON.parse(data);\n        if(data.expire && Date.now() > data.expire){\n          return this.store.delete(filepath);\n        }else{\n          return data.data;\n        }\n      }catch(e){\n        return this.store.delete(filepath);\n      }\n    }).catch(() => {});\n  }\n  /**\n   * set data\n   * @param {String} name    []\n   * @param {Mixed} value   []\n   * @param {Number} timeout []\n   */\n  set(name, value, timeout = this.timeout){\n    if (think.isObject(name)) {\n      timeout = value || timeout;\n      let key = Object.keys(name)[0];\n      value = name[key];\n      name = key;\n    }\n    let filepath = this.getFilepath(name);\n    let data = {\n      data: value,\n      expire: Date.now() + timeout * 1000,\n      timeout: timeout\n    };\n    return this.store.set(filepath, JSON.stringify(data)).catch(() => {});\n  }\n  /**\n   * delete data\n   * @param  {String} name []\n   * @return {Promise}      []\n   */\n  delete(name){\n    let filepath = this.getFilepath(name);\n    return this.store.delete(filepath).catch(() => {});\n  }\n  /**\n   * gc\n   * @return {} []\n   */\n  gc(){\n    let now = Date.now();\n    return this.store.list().then(files => {\n      files.forEach(file => {\n        let filepath = `${this.path}${path.sep}${file}`;\n        let content = fs.readFileSync(filepath, 'utf8');\n        try{\n          let data = JSON.parse(content);\n          if(now > data.expire){\n            fs.unlink(filepath, () => {});\n          }\n        }catch(e){\n          fs.unlink(filepath, () => {});\n        }\n      });\n    });\n  }\n}"]}