{"version":3,"sources":["../../../src/adapter/template/nunjucks.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;mBAaQ,G;0FAAI,Y,EAAc,I,EAAM,M;UAExB,O,EAOA,Q,EAEA,G,EAkBA,E;;;;;AA3BA,qB,GAAU,KAAK,WAAL,CAAiB;AAC7B,4BAAY,IADiB;AAE7B,uBAAO,KAFsB;AAG7B,yBAAS,KAHoB;AAI7B,kCAAkB;AAJW,eAAjB,EAKX,MALW,C;;qBAOO,MAAM,GAAN,CAAU,UAAV,C;;;AAAjB,sB;AAEA,iB;;AACJ,kBAAG,QAAQ,SAAX,EAAqB;;AAEnB,oBAAG,eAAK,UAAL,CAAgB,YAAhB,KAAiC,aAAa,OAAb,CAAqB,QAAQ,SAA7B,MAA4C,CAAhF,EAAkF;AAChF,wBAAM,SAAS,SAAT,CAAmB,OAAnB,CAAN;AACD,iBAFD,MAEK;AACH,wBAAM,SAAS,SAAT,CAAmB,QAAQ,SAA3B,EAAsC,OAAtC,CAAN;AACD;AACF,eAPD,MAOK;AACH,sBAAM,SAAS,SAAT,CAAmB,OAAnB,CAAN;AACD;;AAED,kBAAI,SAAJ,CAAc,OAAd,EAAuB,KAAvB;AACA,kBAAI,SAAJ,CAAc,MAAd,EAAsB,IAAtB;AACA,kBAAI,SAAJ,CAAc,MAAd,EAAsB,IAAtB;;AAEA,mBAAK,SAAL,CAAe,OAAf,EAAwB,QAAxB,EAAkC,GAAlC;;AAEI,gB,GAAK,MAAM,SAAN,CAAgB,SAAS,MAAzB,C;+CACF,GAAG,YAAH,EAAiB,IAAjB,C","file":"nunjucks.js","sourcesContent":["'use strict';\n\nimport path from 'path';\nimport Base from './base.js';\n\n/**\n * nunjucks template\n * @type {Class}\n */\nexport default class extends Base {\n  /**\n   * run\n   * @param  {String} templateFile []\n   * @param  {Object} tVar         []\n   * @return {Promise}             []\n   */\n  async run(templateFile, tVar, config){\n\n    let options = this.parseConfig({\n      autoescape: true,\n      watch: false,\n      noCache: false,\n      throwOnUndefined: false\n    }, config);\n    \n    let nunjucks = await think.npm('nunjucks');\n\n    let env;\n    if(options.root_path){\n      //if templateFile not start with root_path, can not set root_path\n      if(path.isAbsolute(templateFile) && templateFile.indexOf(options.root_path) !== 0){\n        env = nunjucks.configure(options);\n      }else{\n        env = nunjucks.configure(options.root_path, options);\n      }\n    }else{\n      env = nunjucks.configure(options);\n    }\n\n    env.addGlobal('think', think);\n    env.addGlobal('JSON', JSON);\n    env.addGlobal('eval', eval);\n\n    this.prerender(options, nunjucks, env);\n\n    let fn = think.promisify(nunjucks.render);\n    return fn(templateFile, tVar);\n  }\n}"]}