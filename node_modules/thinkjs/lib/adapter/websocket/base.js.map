{"version":3,"sources":["../../../src/adapter/websocket/base.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;mBASE,I,iBAAK,M,EAAQ,M,EAAQ,G,EAAI;AACvB,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,GAAL,GAAW,GAAX;AACD,G;;;;;;;;mBAMD,e,4BAAgB,M,EAAO;AACrB,QAAI,eAAe,KAAK,MAAL,CAAY,YAA/B;AACA,QAAI,CAAC,YAAL,EAAmB;AACjB,aAAO,IAAP;AACD;AACD,QAAI,OAAO,cAAI,KAAJ,CAAU,MAAV,CAAX;AACA,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,MAAM,QAAN,CAAe,YAAf,CAAJ,EAAkC;AAChC,aAAO,iBAAiB,QAAxB;AACD,KAFD,MAEM,IAAI,MAAM,OAAN,CAAc,YAAd,CAAJ,EAAiC;AACrC,aAAO,aAAa,OAAb,CAAqB,QAArB,IAAiC,CAAC,CAAzC;AACD,KAFK,MAEA,IAAI,MAAM,UAAN,CAAiB,YAAjB,CAAJ,EAAoC;AACxC,aAAO,aAAa,QAAb,EAAuB,IAAvB,CAAP;AACD;AACD,WAAO,KAAP;AACD,G;;;;;;;mBAKD,G,kBAAK,CAEJ,C;;;EAvC0B,MAAM,OAAN,CAAc,I","file":"base.js","sourcesContent":["'use strict';\n\nimport url from 'url';\n\nexport default class extends think.adapter.base {\n  /**\n   * init\n   * @param  {Object} server []\n   * @param  {Object} config []\n   * @return {Object}        []\n   */\n  init(server, config, app){\n    this.server = server;\n    this.config = config;\n    this.app = app;\n  }\n  /**\n   * check origin allowed\n   * @param  {String}  origin []\n   * @return {Boolean}        []\n   */\n  isOriginAllowed(origin){\n    let allowOrigins = this.config.allow_origin;\n    if (!allowOrigins) {\n      return true;\n    }\n    let info = url.parse(origin);\n    let hostname = info.hostname;\n    if (think.isString(allowOrigins)) {\n      return allowOrigins === hostname;\n    }else if (think.isArray(allowOrigins)) {\n      return allowOrigins.indexOf(hostname) > -1;\n    }else if (think.isFunction(allowOrigins)) {\n      return allowOrigins(hostname, info);\n    }\n    return false;\n  }\n  /**\n   * run\n   * @return {} []\n   */\n  run(){\n\n  }\n}"]}