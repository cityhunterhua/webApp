{"version":3,"sources":["../../../src/adapter/socket/memcache.js"],"names":[],"mappings":"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","file":"memcache.js","sourcesContent":["'use strict';\n\nimport Base from './base.js';\n\n/**\n * memcache socket\n */\nexport default class extends Base {\n  /**\n   * inti\n   * @param  {Object} config []\n   * @return {}        []\n   */\n  init(config = {}){\n    super.init(config);\n    \n    this.config = think.extend({\n      host: '127.0.0.1',\n      port: 11211,\n      username: '',\n      password: ''\n    }, config);\n  }\n  /**\n   * get socket connect str\n   * @return {String} []\n   */\n  getSocketStr(protocal){\n    let str = '';\n    let config = this.config;\n    if(config.username){\n      str += config.username;\n    }\n    if(config.password){\n      str += ':' + config.password;\n    }\n    if(str){\n      str += '@';\n    }\n    str += config.host + ':' + config.port;\n    if(protocal){\n      return 'memcache://' + str;\n    }\n    return str;\n  }\n  /**\n   * get connection\n   * @return {Promise} []\n   */\n  async getConnection(){\n    if(this.connection){\n      return this.connection;\n    }\n    let memjs = await think.npm('memjs');\n    this.connection = memjs.Client.create(this.getSocketStr(), {\n      logger: {\n        log: () => {}\n      }\n    });\n\n    this.logConnect(this.getSocketStr(true), 'memcache');\n\n    return this.connection;\n  }\n  /**\n   * wrap method\n   * @param  {String}    name []\n   * @param  {} args []\n   * @return {Promise}         []\n   */\n  async wrap(name, ...args){\n    let connection = await this.getConnection();\n    let deferred = think.defer();\n    let callback = (err, data) => err ? deferred.reject(err) : deferred.resolve(data && data.toString());\n    if(args.length === 1){\n      args.push(callback);\n    }else{\n      args = [args[0], args[1], callback, args[2]];\n    }\n    connection[name](...args);\n    let err = new Error(this.getSocketStr(true));\n    return think.error(deferred.promise, err);\n  }\n  /**\n   * get data\n   * @param  {String} key []\n   * @return {Promise}     []\n   */\n  get(key){\n    return this.wrap('get', key);\n  }\n  /**\n   * set data \n   * @param {String} key     []\n   * @param {String} value   []\n   * @param {Number} timeout []\n   */\n  set(key, value, timeout = this.config.timeout){\n    return this.wrap('set', key, value, timeout);\n  }\n  /**\n   * delete data\n   * @param  {String} key []\n   * @return {Promise}     []\n   */\n  delete(key){\n    return this.wrap('delete', key);  \n  }\n  /**\n   * increment\n   * @param  {String} key     []\n   * @param  {Number} amount  []\n   * @param  {Number} timeout []\n   * @return {Promise}         []\n   */\n  increment(key, amount, timeout = this.config.timeout){\n    return this.wrap('increment', key, amount, timeout);\n  }\n  /**\n   * decrement\n   * @param  {String} key     []\n   * @param  {Number} amount  []\n   * @param  {Number} timeout []\n   * @return {Promise}         []\n   */\n  decrement(key, amount, timeout = this.config.timeout){\n    return this.wrap('decrement', key, amount, timeout);\n  }\n}"]}