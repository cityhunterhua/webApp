{"version":3,"sources":["../../../src/adapter/store/memory.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBASE,I,iBAAK,M,EAAO;AACV,SAAK,MAAL,GAAc,MAAM,MAAN,CAAa;AACzB,YAAM,WAAW;AADQ,KAAb,EAEX,MAFW,CAAd;;AAIA,SAAK,IAAL,GAAY,WAAW,KAAK,MAAL,CAAY,IAAvB,CAAZ;AACD,G;;;;;;;;mBAMD,G,gBAAI,G,EAAI;AACN,WAAO,kBAAQ,OAAR,CAAgB,KAAK,IAAL,CAAU,GAAV,CAAhB,CAAP;AACD,G;;;;;;;;mBAMD,G,gBAAI,G,EAAK,O,EAAQ;AACf,SAAK,IAAL,CAAU,GAAV,IAAiB,OAAjB;AACA,WAAO,kBAAQ,OAAR,EAAP;AACD,G;;;;;;;;mBAMD,M,oBAAO,G,EAAI;AACT,WAAO,KAAK,IAAL,CAAU,GAAV,CAAP;AACA,WAAO,kBAAQ,OAAR,EAAP;AACD,G;;;;;;;mBAKD,I,mBAAM;AACJ,WAAO,kBAAQ,OAAR,CAAgB,KAAK,IAArB,CAAP;AACD,G;;;EA5C0B,MAAM,OAAN,CAAc,I","file":"memory.js","sourcesContent":["'use strict';\n/**\n * store base class\n */\nexport default class extends think.adapter.base {\n  /**\n   * init\n   * @return {} []\n   */\n  init(config){\n    this.config = think.extend({\n      type: thinkCache.MEMORY\n    }, config);\n    \n    this.data = thinkCache(this.config.type);\n  }\n  /**\n   * get content\n   * @param  {String} key []\n   * @return {Promise}     []\n   */\n  get(key){\n    return Promise.resolve(this.data[key]);\n  }\n  /**\n   * set key content\n   * @param {} key     []\n   * @param {} content []\n   */\n  set(key, content){\n    this.data[key] = content;\n    return Promise.resolve();\n  }\n  /**\n   * delete key\n   * @param  {String} key []\n   * @return {}     []\n   */\n  delete(key){\n    delete this.data[key];\n    return Promise.resolve();\n  }\n  /**\n   * get all data\n   * @return {} []\n   */\n  list(){\n    return Promise.resolve(this.data);\n  }\n}"]}