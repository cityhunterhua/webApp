{"version":3,"sources":["../../src/service/base.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAUE,K,kBAAM,I,EAAM,O,EAAS,M,EAAO;AAC1B,QAAG,MAAM,QAAN,CAAe,OAAf,KAA2B,MAAM,MAAN,CAAa,OAAb,CAAqB,OAArB,IAAgC,CAAC,CAA/D,EAAiE;AAC/D,eAAS,OAAT;AACA,gBAAU,EAAV;AACD;AACD,aAAS,UAAU,KAAK,mBAAL,EAAnB;AACA,QAAG,MAAM,QAAN,CAAe,OAAf,CAAH,EAA2B;AACzB,gBAAU,EAAC,MAAM,OAAP,EAAV;AACD;AACD,cAAU,MAAM,MAAN,CAAa,EAAb,EAAiB,MAAM,MAAN,CAAa,IAAb,EAAmB,SAAnB,EAA8B,MAA9B,CAAjB,EAAwD,OAAxD,CAAV;AACA,WAAO,MAAM,KAAN,CAAY,IAAZ,EAAkB,OAAlB,EAA2B,MAA3B,CAAP;AACD,G;;;;;;;mBAKD,O,oBAAQ,I,EAAM,M,EAAO;AACnB,aAAS,UAAU,KAAK,mBAAL,EAAnB;AACA,WAAO,MAAM,OAAN,CAAc,IAAd,EAAoB,MAApB,CAAP;AACD,G;;;EAxB0B,MAAM,I","file":"base.js","sourcesContent":["'use strict';\n/**\n * base service\n * @type {Class}\n */\nexport default class extends think.base {\n  /**\n   * get model instance\n   * @return {} []\n   */\n  model(name, options, module){\n    if(think.isString(options) && think.module.indexOf(options) > -1){\n      module = options;\n      options = {};\n    }\n    module = module || this.parseModuleFromPath();\n    if(think.isString(options)){\n      options = {type: options};\n    }\n    options = think.extend({}, think.config('db', undefined, module), options);\n    return think.model(name, options, module);\n  }\n  /**\n   * get service\n   * @return {} []\n   */\n  service(name, module){\n    module = module || this.parseModuleFromPath();\n    return think.service(name, module);\n  }\n}"]}