{"version":3,"sources":["../../src/middleware/csrf.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAUQ,G;;UACA,I,EAEA,O,EACA,K,EACA,M,EACA,M,EACA,O,EAGE,K,EAOA,M,EACA,S;;;;;;AAjBF,kB,GAAO,KAAK,MAAL,CAAY,MAAZ,C;;AACX,oBAAM,OAAN,CAAc,KAAK,IAAnB;AACI,qB,GAAU,KAAK,IAAL,CAAU,Q;AACpB,mB,GAAQ,KAAK,IAAL,CAAU,KAAV,E;AACR,oB,GAAS,KAAK,IAAL,CAAU,MAAV,E;AACT,oB,GAAS,KAAK,IAAL,CAAU,MAAV,E;AACT,qB,GAAU,KAAK,IAAL,CAAU,OAAV,E;;oBAEV,SAAS,CAAC,MAAV,IAAoB,CAAC,O;;;;;;qBACL,QAAQ,GAAR,CAAY,KAAK,YAAjB,C;;;AAAd,mB;;kBACC,K;;;;;AACH,sBAAQ,MAAM,IAAN,CAAW,EAAX,CAAR;;qBACM,QAAQ,GAAR,CAAY,KAAK,YAAjB,EAA+B,KAA/B,C;;;AAER,mBAAK,IAAL,CAAU,IAAV,GAAiB,MAAjB,CAAwB,KAAK,SAA7B,EAAwC,KAAxC;;;;;oBACS,UAAU,MAAV,IAAoB,O;;;;;;qBACX,QAAQ,GAAR,CAAY,KAAK,YAAjB,C;;;AAAd,oB;AACA,uB,GAAY,KAAK,IAAL,CAAU,SAAS,MAAT,GAAkB,OAA5B,EAAqC,KAAK,SAA1C,C;;oBACZ,CAAC,MAAD,IAAU,cAAc,M;;;;;+CACnB,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,KAApB,EAA2B,KAAK,MAAhC,C;;;;;;;;;;;;;;;;;;EAzBc,MAAM,UAAN,CAAiB,I","file":"csrf.js","sourcesContent":["'use strict';\n/**\n * check csrf\n * @type {}\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @return {Promise} []\n   */\n  async run() {\n    let csrf = this.config('csrf');\n    think.session(this.http);\n    let session = this.http._session;\n    let isGet = this.http.isGet();\n    let isPost = this.http.isPost();\n    let isAjax = this.http.isAjax();\n    let isJsonp = this.http.isJsonp();\n\n    if (isGet && !isAjax && !isJsonp) {\n      let value = await session.get(csrf.session_name);\n      if (!value) {\n        value = think.uuid(32);\n        await session.set(csrf.session_name, value);\n      }\n      this.http.view().assign(csrf.form_name, value);\n    } else if (isPost || isAjax || isJsonp) {\n      let value = await session.get(csrf.session_name);\n      let formValue = this.http[isPost ? 'post' : 'param'](csrf.form_name);\n      if (!value || formValue !== value) {\n        return this.http.fail(csrf.errno, csrf.errmsg);\n      }\n    }\n  }\n}"]}