{"version":3,"sources":["../../src/middleware/locate_template.js"],"names":[],"mappings":"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","file":"locate_template.js","sourcesContent":["'use strict';\n\nimport path from 'path';\n/**\n * find template file path\n * @param  {String}  \n * @return {Class}\n */\nexport default class extends think.middleware.base {\n  /**\n   * get path prefix\n   * @return {String} []\n   */\n  getPathPrefix(module){\n    let pathPrefix, http = this.http, prefix = '';\n    let {root_path} = this.options;\n    let theme = http.theme();\n    let lang = http._langAsViewPath && http.lang();\n    \n    module = module || http.module;\n    \n    //support locale\n    if(lang){\n      prefix += think.sep + lang;\n    }\n    //support theme\n    if(theme){\n      prefix += think.sep + theme;\n    }\n\n    //view root path is defined\n    if(root_path){\n      pathPrefix = path.normalize(root_path);\n      if(think.mode === think.mode_module){\n        pathPrefix += prefix + think.sep + module;\n      }\n    }else{\n      pathPrefix = think.getPath(module, think.dirname.view, prefix);\n    }\n\n    return pathPrefix;\n  }\n  /**\n   * run\n   * @param  {String} templateFile [template filepath]\n   * @return {}              []\n   */\n  run(options){\n    if(!think.isObject(options)){\n      options = think.extend({\n        templateFile: options\n      }, this.config('view'));\n    }\n    this.options = options;\n\n    let templateFile = options.templateFile;\n    //is absolute file path\n    if(templateFile && path.isAbsolute(templateFile)){\n      return templateFile;\n    }\n    let http = this.http;\n    let {file_depr, file_ext} = options;\n    let pathPrefix = this.getPathPrefix();\n    let controller = http.controller.replace(/\\//g, think.sep);\n\n    //if file_depr is /, replace to think.sep, avoid error on windows\n    if(file_depr === '/'){\n      file_depr = think.sep;\n    }\n\n    // this.display()\n    if (!templateFile) {\n      return pathPrefix + think.sep + controller + file_depr + http.action + file_ext;\n    }\n    //replace : to /\n    templateFile = templateFile.replace(/\\:/g, '/');\n\n    // this.display('detail')\n    // this.display('index/detail')\n    // this.display('admin/index/detail')\n    // this.display('admin/index/detail.html')\n    let paths = templateFile.split('/');\n    let length = paths.length;\n    let action = paths[length - 1];\n\n    let module;\n    if(length === 2){\n      controller = paths[0];\n    }else if(length > 2){\n      let index = think.module.indexOf(paths[0]) > -1 ? 1 : 0;\n      if(index){\n        module = paths[0];\n      }\n      let newController = paths.slice(index, length - 1).join(think.sep);\n      if(newController){\n        controller = newController;\n      }\n    }\n\n    if (module && module !== http.module) {\n      pathPrefix = this.getPathPrefix(module);\n    }\n\n    templateFile = pathPrefix + think.sep + controller + file_depr + action;\n    if (action.indexOf('.') === -1) {\n      templateFile += file_ext;\n    }\n    return templateFile;\n  }\n}"]}