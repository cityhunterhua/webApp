{"version":3,"sources":["../../src/middleware/rewrite_pathname.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAUE,G,kBAAK;AACH,QAAI,OAAO,KAAK,IAAhB;AACA,QAAI,WAAW,KAAK,QAApB;AACA,QAAI,CAAC,QAAD,IAAa,aAAa,GAA9B,EAAmC;AACjC;AACD;AACD,QAAI,SAAS,KAAK,MAAL,CAAY,iBAAZ,CAAb;AACA,QAAI,UAAU,SAAS,OAAT,CAAiB,MAAjB,MAA6B,CAA3C,EAA8C;AAC5C,iBAAW,SAAS,MAAT,CAAgB,OAAO,MAAvB,CAAX;AACD;AACD,QAAI,SAAS,KAAK,MAAL,CAAY,iBAAZ,CAAb;AACA,QAAI,UAAU,SAAS,MAAT,CAAgB,IAAI,OAAO,MAA3B,MAAuC,MAArD,EAA6D;AAC3D,iBAAW,SAAS,MAAT,CAAgB,CAAhB,EAAmB,SAAS,MAAT,GAAkB,OAAO,MAA5C,CAAX;AACD;AACD,SAAK,QAAL,GAAgB,QAAhB;AACD,G;;;EApB0B,MAAM,UAAN,CAAiB,I","file":"rewrite_pathname.js","sourcesContent":["'use strict';\n/**\n * rewrite pathname\n * @type {}\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @return {} []\n   */\n  run(){\n    let http = this.http;\n    let pathname = http.pathname;\n    if (!pathname || pathname === '/') {\n      return;\n    }\n    let prefix = http.config('pathname_prefix');\n    if (prefix && pathname.indexOf(prefix) === 0) {\n      pathname = pathname.substr(prefix.length);\n    }\n    let suffix = http.config('pathname_suffix');\n    if (suffix && pathname.substr(0 - suffix.length) === suffix) {\n      pathname = pathname.substr(0, pathname.length - suffix.length);\n    }\n    http.pathname = pathname;\n  }\n}"]}