{"version":3,"sources":["../../src/middleware/parse_template.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAcE,G,gBAAI,I,EAAK;AACP,QAAI,OAAO,KAAK,IAAhB;AACA,SAAK,IAAL,CAAU,QAAV,GAAqB,IAArB;AACA,QAAI,SAAS,KAAK,MAAL,IAAe,EAA5B;AACA,QAAI,SAAS,OAAO,IAAP,IAAe,KAAK,MAAL,CAAY,WAAZ,CAAf,IAA2C,MAAxD;AACA,QAAI,MAAM,MAAM,OAAN,CAAc,UAAd,EAA0B,MAA1B,CAAV;AACA,QAAI,WAAW,IAAI,GAAJ,EAAf;AACA,WAAO,SAAS,GAAT,CAAa,IAAb,EAAmB,KAAK,GAAxB,EAA6B,MAA7B,CAAP;AACD,G;;;EAd0B,MAAM,UAAN,CAAiB,I","file":"parse_template.js","sourcesContent":["'use strict';\n\n\n/**\n * parse template content\n * @param  {Object} \n * @return {Promise}         []\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @param  {Object} data [render template data]\n   * @return {Promise}      []\n   */\n  run(data){\n    let file = data.file;\n    this.http.tpl_file = file;\n    let config = data.config || {};\n    let engine = config.type || this.config('view.type') || 'base';\n    let Cls = think.adapter('template', engine);\n    let instance = new Cls();\n    return instance.run(file, data.var, config);\n  }\n}"]}