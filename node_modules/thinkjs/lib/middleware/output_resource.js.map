{"version":3,"sources":["../../src/middleware/output_resource.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;mBAWE,G,gBAAI,I,EAAK;;AAEP,QAAG,SAAS,KAAZ,EAAkB;AAChB;AACD;AACD,QAAI,OAAO,KAAK,IAAhB;;AAEA,QAAG,SAAS,IAAZ,EAAiB;AACf,WAAK,MAAL,CAAY,GAAZ;AACA,WAAK,GAAL;AACA,aAAO,MAAM,OAAN,EAAP;AACD;;AAED,SAAK,WAAL,GAAmB,IAAnB;;AAEA,QAAI,cAAc,eAAK,MAAL,CAAY,IAAZ,CAAlB;AACA,SAAK,IAAL,CAAU,WAAV,EAAuB,KAAvB;;AAEA,QAAI,QAAQ,KAAK,MAAL,CAAY,OAAZ,CAAZ;AACA,QAAG,CAAC,KAAJ,EAAU;AACR,aAAO,KAAK,YAAL,CAAkB,IAAlB,CAAP;AACD;AACD,WAAO,KAAK,WAAL,CAAiB,IAAjB,EAAuB,KAAvB,CAAP;AACD,G;;;;;;;;mBAMD,Y,yBAAa,I,EAAK;AAChB,QAAI,OAAO,KAAK,IAAhB;AACA,QAAI,SAAS,aAAG,gBAAH,CAAoB,IAApB,CAAb;AACA,WAAO,IAAP,CAAY,KAAK,GAAjB;AACA,WAAO,EAAP,CAAU,KAAV,EAAiB,YAAM;AACrB,WAAK,GAAL;AACD,KAFD;AAGA,WAAO,EAAP,CAAU,OAAV,EAAmB,YAAM;AACvB,WAAK,GAAL;AACD,KAFD;AAGA,WAAO,MAAM,OAAN,EAAP;AACD,G;;;;;;;;;mBAOD,W,wBAAY,I,EAAM,K,EAAM;;AAEtB,QAAI,OAAO,aAAG,QAAH,CAAY,IAAZ,EAAkB,IAA7B;AACA,QAAI,QAAQ,MAAM,KAAN,CAAY,oBAAZ,CAAZ;AACA,QAAI,QAAQ,IAAI,IAAJ,GAAW,IAAvB;AACA,QAAI,OAAO,SAAS,MAAM,CAAN,CAAT,KAAsB,CAAjC;AACA,QAAI,KAAK,SAAS,MAAM,CAAN,CAAT,KAAsB,CAA/B;AACA,QAAG,CAAC,EAAJ,EAAO;AACL,WAAK,OAAO,KAAP,GAAe,CAApB;AACD;AACD,SAAK,KAAK,GAAL,CAAS,EAAT,EAAa,OAAO,CAApB,CAAL;;AAEA,QAAI,OAAO,KAAK,IAAhB;AACA,SAAK,MAAL,CAAY,GAAZ;AACA,SAAK,MAAL,CAAY,eAAZ,EAA6B,OAA7B;AACA,SAAK,MAAL,CAAY,eAAZ,aAAsC,IAAtC,SAA8C,EAA9C,SAAoD,IAApD;;AAEA,QAAI,KAAK,aAAG,QAAH,CAAY,IAAZ,EAAkB,GAAlB,CAAT;AACA,QAAI,SAAS,IAAI,MAAJ,CAAW,KAAK,IAAL,GAAY,CAAvB,CAAb;AACA,iBAAG,QAAH,CAAY,EAAZ,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,KAAK,IAAhC,EAAsC,IAAtC;AACA,iBAAG,SAAH,CAAa,EAAb;AACA,SAAK,GAAL,CAAS,MAAT;;AAEA,WAAO,MAAM,OAAN,EAAP;AACD,G;;;EA5E0B,MAAM,UAAN,CAAiB,I","file":"output_resource.js","sourcesContent":["'use strict';\n\nimport fs from 'fs';\nimport mime from 'mime';\n\n/**\n * output resource\n * @type {}\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @return {} []\n   */\n  run(file){\n    //not resource\n    if(file === false){\n      return;\n    }\n    let http = this.http;\n    //is resource but not exist\n    if(file === true){\n      http.status(404);\n      http.end();\n      return think.prevent();\n    }\n    //flag request is resource\n    http._isResource = true;\n\n    let contentType = mime.lookup(file);\n    http.type(contentType, false);\n\n    let range = http.header('range');\n    if(!range){\n      return this.outputNormal(file);\n    }\n    return this.outputRange(file, range);\n  }\n  /**\n   * output normal file\n   * @param  {String} file []\n   * @return {Promise}      []\n   */\n  outputNormal(file){\n    let http = this.http;\n    let stream = fs.createReadStream(file);\n    stream.pipe(http.res);\n    stream.on('end', () => {\n      http.end();\n    });\n    stream.on('error', () => {\n      http.end();\n    });\n    return think.prevent();\n  }\n  /**\n   * output range file\n   * @param  {String} file  []\n   * @param  {String} range []\n   * @return {Promise}       []\n   */\n  outputRange(file, range){\n    //request has range header\n    let size = fs.statSync(file).size;\n    let match = range.match(/bytes=(\\d+)\\-(\\d*)/);\n    let slice = 1 * 1024 * 1024;\n    let from = parseInt(match[1]) || 0;\n    let to = parseInt(match[2]) || 0;\n    if(!to){\n      to = from + slice - 1;\n    }\n    to = Math.min(to, size - 1);\n\n    let http = this.http;\n    http.status(206);\n    http.header('Accept-Ranges', 'bytes');\n    http.header('Content-Range', `bytes ${from}-${to}/${size}`);\n    \n    let fd = fs.openSync(file, 'r');\n    let buffer = new Buffer(to - from + 1);\n    fs.readSync(fd, buffer, 0, to - from, from);\n    fs.closeSync(fd);\n    http.end(buffer);\n\n    return think.prevent();\n  }\n}"]}