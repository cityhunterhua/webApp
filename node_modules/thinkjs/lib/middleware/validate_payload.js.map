{"version":3,"sources":["../../src/middleware/validate_payload.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAWE,G,kBAAK;AACH,QAAI,OAAO,KAAK,IAAhB;AACA,QAAI,OAAO,KAAK,KAAhB;AACA,QAAI,SAAS,oBAAY,IAAZ,EAAkB,MAA/B;AACA,QAAI,SAAS,MAAM,MAAN,CAAa,iBAAb,CAAb,EAA8C;AAC5C,WAAK,GAAL,CAAS,UAAT,GAAsB,GAAtB;AACA,WAAK,GAAL;AACA,aAAO,MAAM,OAAN,EAAP;AACD;AACD,QAAI,eAAe,MAAM,MAAN,CAAa,sBAAb,CAAnB;AACA,SAAI,IAAI,IAAR,IAAgB,IAAhB,EAAqB;AACnB,UAAI,KAAK,IAAL,KAAc,KAAK,IAAL,EAAW,MAAX,GAAoB,YAAtC,EAAoD;AAClD,aAAK,GAAL,CAAS,UAAT,GAAsB,GAAtB;AACA,aAAK,GAAL;AACA,eAAO,MAAM,OAAN,EAAP;AACD;AACF;AACF,G;;;EAtB0B,MAAM,UAAN,CAAiB,I","file":"validate_payload.js","sourcesContent":["'use strict';\n\n/**\n * validate post data\n * @type {}\n */\nexport default class extends think.middleware.base {\n  /**\n   * run\n   * @return {} []\n   */\n  run(){\n    let http = this.http;\n    let post = http._post;\n    let length = Object.keys(post).length;\n    if (length > think.config('post.max_fields')) {\n      http.res.statusCode = 400;\n      http.end();\n      return think.prevent();\n    }\n    let maxFilesSize = think.config('post.max_fields_size');\n    for(let name in post){\n      if (post[name] && post[name].length > maxFilesSize) {\n        http.res.statusCode = 400;\n        http.end();\n        return think.prevent();\n      }\n    }\n  }\n}"]}