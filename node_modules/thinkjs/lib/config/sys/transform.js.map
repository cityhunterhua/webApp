{"version":3,"sources":["../../../src/config/sys/transform.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAQA,IAAI,QAAQ,SAAR,KAAQ,CAAC,KAAD,EAAQ,MAAR,EAAmB;AAC7B,MAAI,CAAC,KAAD,IAAU,MAAM,UAAN,CAAiB,KAAjB,CAAd,EAAuC;AACrC,WAAO,KAAP;AACD;AACD,UAAQ,OAAO,KAAP,CAAR;AACA,MAAI,MAAM,UAAN,CAAiB,KAAjB,CAAJ,EAA6B;AAC3B,WAAO,KAAP;AACD;AACD,MAAI,MAAM,MAAM,MAAN,CAAa,qBAAb,EAAoC,MAApC,CAAV;AACA,QAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD,CAVD;;;;;kBAee;AACb,QAAM;;;;;;AAMJ,uBAAmB,kCAAS;AAC1B,UAAI,MAAM,QAAN,CAAe,KAAf,CAAJ,EAA2B;AACzB,eAAO,CAAC,KAAD,CAAP;AACD;AACD,UAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B;AACzB,YAAI,MAAM,MAAM,MAAN,CAAa,kBAAb,EAAiC,wBAAjC,CAAV;AACA,cAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;AACD,aAAO,KAAP;AACD;AAfG,GADO;;;;;;AAuBb,aAAW,0BAAS;AAClB,QAAI,MAAM,QAAN,CAAe,KAAf,CAAJ,EAA2B;AACzB,aAAO,EAAC,YAAD,EAAP;AACD;AACD,QAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AAAA;AACxB,YAAI,MAAM,EAAV;AACA,cAAM,OAAN,CAAc,gBAAQ;AACpB,cAAI,IAAJ,IAAY,IAAZ;AACD,SAFD;AAGA;AAAA,aAAO;AAAP;AALwB;;AAAA;AAMzB;AACD,QAAI,CAAC,MAAM,QAAN,CAAe,KAAf,CAAL,EAA4B;AAC1B,UAAI,MAAM,MAAM,MAAN,CAAa,kBAAb,EAAiC,WAAjC,CAAV;AACA,YAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;AACD,WAAO,KAAP;AACD,GAvCY;;;;;;AA6Cb,oBAAkB,iCAAS;AACzB,QAAI,MAAM,QAAN,CAAe,KAAf,CAAJ,EAA2B;AACzB,aAAO,CAAC,KAAD,CAAP;AACD;AACD,QAAI,CAAC,MAAM,OAAN,CAAc,KAAd,CAAL,EAA2B;AACzB,UAAI,MAAM,MAAM,MAAN,CAAa,kBAAb,EAAiC,kBAAjC,CAAV;AACA,YAAM,IAAI,KAAJ,CAAU,GAAV,CAAN;AACD;AACD,WAAO,KAAP;AACD,GAtDY;;;;;;AA4Db,kBAAgB;AAAA,WAAS,MAAM,KAAN,EAAa,gBAAb,CAAT;AAAA,GA5DH;;;;;;AAkEb,iBAAe;AAAA,WAAS,MAAM,KAAN,EAAa,eAAb,CAAT;AAAA,GAlEF;;;;;AAuEb,SAAO;AACL,UAAM;AAAA,aAAS,MAAM,WAAN,EAAT;AAAA;AADD,GAvEM;;;;;AA8Eb,WAAS;AACP,UAAM;AAAA,aAAS,MAAM,WAAN,EAAT;AAAA;AADC;AA9EI,C","file":"transform.js","sourcesContent":["'use strict';\n\n/**\n * get function\n * @param  {mixed} value  []\n * @param  {String} config []\n * @return {}        []\n */\nlet getFn = (value, config) => {\n  if (!value || think.isFunction(value)) {\n    return value;\n  }\n  value = global[value];\n  if (think.isFunction(value)) {\n    return value;\n  }\n  let msg = think.locale('CONFIG_NOT_FUNCTION', config);\n  throw new Error(msg);\n};\n/**\n * config transform\n * @type {Object}\n */\nexport default {\n  post: {\n    /**\n     * json content type list\n     * @param  {Array} value []\n     * @return {Array}       []\n     */\n    json_content_type: value => {\n      if (think.isString(value)) {\n        return [value];\n      }\n      if (!think.isArray(value)) {\n        let msg = think.locale('CONFIG_NOT_VALID', 'post.json_content_type');\n        throw new Error(msg);\n      }\n      return value;\n    }\n  },\n  /**\n   * sub doamin deploy\n   * @param  {Object} value []\n   * @return {Object}       []\n   */\n  subdomain: value => {\n    if (think.isString(value)) {\n      return {value};\n    }\n    if (think.isArray(value)) {\n      let obj = {};\n      value.forEach(item => {\n        obj[item] = item;\n      });\n      return obj;\n    }\n    if (!think.isObject(value)) {\n      let msg = think.locale('CONFIG_NOT_VALID', 'subdomain');\n      throw new Error(msg);\n    }\n    return value;\n  },\n  /**\n   * deby module list\n   * @param  {Array} value []\n   * @return {Array}       []\n   */\n  deny_module_list: value => {\n    if (think.isString(value)) {\n      return [value];\n    }\n    if (!think.isArray(value)) {\n      let msg = think.locale('CONFIG_NOT_VALID', 'deny_module_list');\n      throw new Error(msg);\n    }\n    return value;\n  },\n  /**\n   * output content\n   * @param  {String} value []\n   * @return {Function}       []\n   */\n  output_content: value => getFn(value, 'output_content'),\n  /**\n   * create server\n   * @param  {String} value []\n   * @return {Function}       []\n   */\n  create_server: value => getFn(value, 'create_server'),\n  /**\n   * cache config\n   * @type {Object}\n   */\n  cache: {\n    type: value => value.toLowerCase()\n  },\n  /**\n   * session config\n   * @type {Object}\n   */\n  session: {\n    type: value => value.toLowerCase()\n  }\n};"]}