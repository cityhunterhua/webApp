{"version":3,"sources":["../../src/core/think_adapter.js"],"names":[],"mappings":"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","file":"think_adapter.js","sourcesContent":["'use strict';\n\nimport fs from 'fs';\n\n/**\n * create, register, call adapter\n * @param  {String} name []\n * @return {void}      []\n */\nlet Adapter = (...args) => {\n  let [type, name, fn] = args;\n  let length = args.length, key = 'adapter_';\n  if(length === 3){\n    //register adapter\n    //think.adapter('session', 'redis', function(){})\n    if (think.isFunction(fn)) {\n      key += `${type}_${name}`;\n      thinkData.export[key] = fn;\n      return;\n    }\n    //create adapter\n    //module.exports = think.adapter('session', 'memory', {})\n    else if(think.isObject(fn)){\n      return think.Class(think.adapter(type, name), fn);\n    }\n  }\n  //type has not _\n  else if(length === 2 && think.isString(type) && type.indexOf('_') === -1){\n    //create adapter\n    //module.exports = think.adapter('session', {})\n    if(think.isObject(name)){\n      return think.Class(think.adapter(type, 'base'), name);\n    }\n    //get adapter\n    //think.adapter('session', 'redis')\n    else if (think.isString(name)) {\n      return Adapter.get(type, name);\n    }\n  }\n  \n  return Adapter.create(type, name);\n};\n\n//get adapter\n//think.adapter('session', 'redis')\nAdapter.get = (type, name) => {\n  let key = 'adapter_';\n  let nameLower = name.toLowerCase();\n  if(name !== nameLower){\n    name = nameLower;\n    think.log(colors => {\n      return colors.yellow(`[WARNING]`) + ` adapter type \\`${name}\\` has uppercase chars.`;\n    });\n  }\n  \n  key += type + '_' + name;\n  let cls = think.require(key, true);\n  if (cls) {\n    return cls;\n  }else{\n    Adapter.load(type, name);\n    let cls = think.require(key, true);\n    if(cls){\n      return cls;\n    }\n  }\n  throw new Error(think.locale('ADAPTER_NOT_FOUND', key));\n};\n\n//create adapter\n//module.exports = think.adapter({})\n//module.exports = think.adapter(function(){}, {});\nAdapter.create = (type, name) => {\n  let superClass;\n  if (think.isFunction(type)) {\n    superClass = type;\n  }else if (think.isString(type)) {\n    superClass = think.require(type);\n  }\n  //create clean Class\n  if (!superClass) {\n    return think.Class(type);\n  }\n  return think.Class(superClass, name);\n};\n\n/**\n * load system & comon module adapter\n * @return {} []\n */\nAdapter.load = (type, name = 'base') => {\n  let paths = [`${think.THINK_LIB_PATH}${think.sep}adapter`];\n  \n  //load base adapter\n  if(!think.adapter.base){\n    think.adapter.base = think.safeRequire(paths[0] + '/base.js');\n  }\n  \n  //common module adapter\n  let adapterPath = think.getPath(undefined, think.dirname.adapter);\n  if (think.isDir(adapterPath)) {\n    paths.push(adapterPath);\n  }\n  paths.forEach(path => {\n    if(type){\n      let filepath = `${path}${think.sep}${type}${think.sep}${name}.js`;\n      if(think.isFile(filepath)){\n        thinkData.alias[`adapter_${type}_${name}`] = filepath;\n      }\n    }else{\n      let dirs = fs.readdirSync(path);\n      dirs.forEach(dir => {\n        if(!think.isDir(`${path}/${dir}`)){\n          return;\n        }\n        think.alias(`adapter_${dir}`, `${path}${think.sep}${dir}`);\n      });\n    }\n  });\n};\n\nexport default Adapter;"]}