{"version":3,"sources":["../../src/core/http.js"],"names":[],"mappings":"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","file":"http.js","sourcesContent":["'use strict';\n\nimport url from 'url';\nimport fs from 'fs';\nimport mime from 'mime';\nimport cookie from '../util/cookie.js';\n\nconst PAYLOAD_METHODS = ['POST', 'PUT', 'PATCH'];\n\n/**\n * wrap for request & response\n * @type {Object}\n */\nexport default class {\n  /**\n   * constructor\n   * @return {} []\n   */\n  constructor(req, res){\n    this.init(req, res);\n  }\n  /**\n   * init method\n   * @param  {Object} req [request]\n   * @param  {Object} res [response]\n   * @return {}     []\n   */\n  init(req, res){\n    //request object\n    this.req = req;\n    //response object\n    this.res = res;\n\n    //set http start time\n    this.startTime = Date.now();\n\n    this.parseRequest();\n\n    //set request timeout\n    let timeout = think.config('timeout');\n    if(timeout){\n      res.setTimeout(timeout * 1000, () => {\n        this.end();\n      });\n    }\n  }\n  /**\n   * parse properties\n   * @return {} []\n   */\n  parseRequest(){\n    this.url = this.req.url;\n    this.version = this.req.httpVersion;\n    this.method = this.req.method;\n    this.headers = this.req.headers;\n    this.host = this.headers.host || '';\n    this.hostname = '';\n    this.pathname = '';\n\n    this.query = {};\n    this._file = {};\n    this._post = {};\n    this._cookie = {};\n    this._sendCookie = {};\n    this._get = {};\n    \n    //store all other properties\n    this._prop = {};\n    \n    this._contentTypeIsSend = false; //aleady send content-type header\n    this._isResource = false; //is resource request\n    this._isEnd = false; //request is end\n\n    this._outputContentPromise = [];\n    this._view = null; //view instance\n    this._session = null; //session instance\n    this._lang = ''; //language\n    this._langAsViewPath = false; //language as view path\n    this._config = null; // config\n    this._error = undefined; //error message\n    this._theme = undefined; //theme\n    this.error = null; //error object\n    this._cli = !!think.cli; //cli request\n    \n    this.module = '';\n    this.controller = '';\n    this.action = '';\n\n    this.payload = null; //request payload, Buffer\n    this.tpl_file = ''; //template file path\n\n    //optimize for homepage request\n    if(this.req.url === '/'){\n      this.pathname = '/';\n      let pos = this.host.indexOf(':');\n      this.hostname = pos === -1 ? this.host : this.host.slice(0, pos);\n    }else{\n      let urlInfo = url.parse('//' + this.host + this.req.url, true, true);\n      //can not use decodeURIComponent, pathname may be has encode / chars\n      //decodeURIComponent value after parse route\n      //remove unsafe chars in pathname\n      this.pathname = this.normalizePathname(urlInfo.pathname);\n      this.hostname = urlInfo.hostname;\n      let query = urlInfo.query;\n      if(!think.isEmpty(query)){\n        this.query = query;\n        this._get = think.extend({}, query);\n      } \n    }\n  }\n  /**\n   * get or set property\n   */\n  prop(name, value){\n    if(value === undefined){\n      return this._prop[name];\n    }\n    this._prop[name] = value;\n    return this;\n  }\n  /**\n   * exec\n   * @return Promise            []\n   */\n  async run(){\n    \n    await think.hook.exec('request_begin', this);\n    //array indexOf is faster than string\n    if (PAYLOAD_METHODS.indexOf(this.req.method) > -1) {\n      await this.parsePayload();\n    }\n    return this;\n  }\n  /**\n   * check request has post data\n   * @return {Boolean} []\n   */\n  hasPayload(){\n    if ('transfer-encoding' in this.req.headers) {\n      return true;\n    }\n    return (this.req.headers['content-length'] | 0) > 0;\n  }\n  /**\n   * get payload data\n   * @param  {String} encoding [payload data encoding]\n   * @return {}          []\n   */\n  getPayload(encoding = 'utf8'){\n\n    let _getPayload = () => {\n      if(this.payload){\n        return Promise.resolve(this.payload);\n      }\n      if(!this.req.readable){\n        return Promise.resolve(new Buffer(0));\n      }\n      let buffers = [];\n      let deferred = think.defer();\n      this.req.on('data', chunk => {\n        buffers.push(chunk);\n      });\n      this.req.on('end', () => {\n        this.payload = Buffer.concat(buffers);\n        deferred.resolve(this.payload);\n      });\n      this.req.on('error', () => {\n        this.res.statusCode = 400;\n        this.end();\n      });\n      return deferred.promise;\n    };\n\n    return _getPayload().then(buffer => {\n      return encoding === true ? buffer : buffer.toString(encoding);\n    });\n  }\n  /**\n   * parse payload from request\n   * @return {Promise} []\n   */\n  async parsePayload(){\n    if(this.hasPayload()){\n      await think.hook('payload_parse', this);\n      await think.hook('payload_validate', this);\n    }\n  }\n  \n  /**\n   * normalize pathname, remove hack chars\n   * @param  {String} pathname []\n   * @return {String}          []\n   */\n  normalizePathname(pathname){\n    let length = pathname.length;\n    let i = 0, chr, result = [], value = '';\n    while(i < length){\n      chr = pathname[i++];\n      if(chr === '/' || chr === '\\\\'){\n        if(value && decodeURIComponent(value)[0] !== '.'){\n          result.push(value);\n        }\n        value = '';\n      }else{\n        value += chr;\n      }\n    }\n    if(value && decodeURIComponent(value) !== '.'){\n      result.push(value);\n    }\n    return result.join('/');\n  }\n  /*\n   * get or set config\n   * @param  {string} name  [config name]\n   * @param  {mixed} value [config value]\n   * @return {mixed}       []\n   */\n  config(name, value){\n    return think.config(name, value, this._config);\n  }\n  /**\n   * get or set content type\n   * @param  {String} ext [file ext]\n   * @return {}     []\n   */\n  type(contentType, encoding){\n    if (!contentType) {\n      return (this.headers['content-type'] || '').split(';')[0].trim();\n    }\n    if (this._contentTypeIsSend) {\n      return;\n    }\n    if (contentType.indexOf('/') === -1) {\n      contentType = mime.lookup(contentType);\n    }\n    if (encoding !== false && contentType.toLowerCase().indexOf('charset=') === -1) {\n      contentType += '; charset=' + (encoding || this.config('encoding'));\n    }\n    this.header('Content-Type', contentType);\n  }\n  /**\n   * get user agent\n   * @return {String} []\n   */\n  userAgent(){\n    return this.headers['user-agent'] || '';\n  }\n  /**\n   * get page request referrer\n   * @param  {String} host [only get referrer host]\n   * @return {String}      []\n   */\n  referrer(host){\n    let referer = this.headers.referer || this.headers.referrer || '';\n    if (!referer || !host) {\n      return referer;\n    }\n    let info = url.parse(referer);\n    return info.hostname;\n  }\n  /**\n   * check http method is get\n   * @return {Boolean} []\n   */\n  isGet(){\n    return this.method === 'GET';\n  }\n  /**\n   * check http method is post\n   * @return {Boolean} []\n   */\n  isPost(){\n    return this.method === 'POST';\n  }\n  /**\n   * is cli request\n   * @return {Boolean} []\n   */\n  isCli(){\n    return this._cli;\n  }\n  /**\n   * is ajax request\n   * @param  {String}  method []\n   * @return {Boolean}        []\n   */\n  isAjax(method) {\n    if (method && this.method !== method.toUpperCase()) {\n      return false;\n    }\n    return this.headers['x-requested-with'] === 'XMLHttpRequest';\n  }\n  /**\n   * is jsonp request\n   * @param  {String}  name [callback name]\n   * @return {Boolean}      []\n   */\n  isJsonp(name){\n    name = name || this.config('callback_name');\n    return !!this.get(name);\n  }\n  /**\n   * get or set get params\n   * @param  {String} name []\n   * @return {Object | String}      []\n   */\n  get(name, value){\n    if (value === undefined) {\n      if (name === undefined) {\n        return this._get;\n      }else if (think.isString(name)) {\n        //may be value is false or 0\n        value = this._get[name];\n        if(value === undefined){\n          value = '';\n        }\n        return value;\n      }\n      this._get = name;\n    }else{\n      this._get[name] = value;\n    }\n  }\n  /**\n   * get or set post params\n   * @param  {String} name []\n   * @return {Object | String}      []\n   */\n  post(name, value){\n    if (value === undefined) {\n      if (name === undefined) {\n        return this._post;\n      }else if (think.isString(name)) {\n        //may be value is false or 0\n        value = this._post[name];\n        if(value === undefined){\n          value = '';\n        }\n        return value;\n      }\n      this._post = name;\n    }else {\n      this._post[name] = value;\n    }\n  }\n  /**\n   * get post or get params\n   * @param  {String} name []\n   * @return {Object | String}      []\n   */\n  param(name){\n    if (name === undefined) {\n      return think.extend({}, this._get, this._post);\n    }\n    return this._post[name] || this._get[name] || '';\n  }\n  /**\n   * get or set file data\n   * @param  {String} name []\n   * @return {Object}      []\n   */\n  file(name, value){\n    if (value === undefined) {\n      if (name === undefined) {\n        return think.extend({}, this._file);\n      }\n      return think.extend({}, this._file[name]);\n    }\n    this._file[name] = value;\n  }\n  /**\n   * get or set header\n   * @param  {String} name  [header name]\n   * @param  {String} value [header value]\n   * @return {}       []\n   */\n  header(name, value){\n    if (name === undefined) {\n      return this.headers;\n    }else if (value === undefined) {\n      return this.headers[name] || '';\n    }\n    //check content type is send\n    if (name.toLowerCase() === 'content-type') {\n      if (this._contentTypeIsSend) {\n        return;\n      }\n      this._contentTypeIsSend = true;\n    }\n    //set header\n    if (!this.res.headersSent) {\n      this.res.setHeader(name, value);\n    }\n  }\n  /**\n   * set http status\n   * @param  {Number} status []\n   * @return {}        []\n   */\n  status(status = 200){\n    let res = this.res;\n    if (!res.headersSent) {\n      res.statusCode = status;\n    }\n    return this;\n  }\n  /**\n   * get uesr ip\n   * @return {String} [ip4 or ip6]\n   */\n  ip(forward){\n    let proxy = think.config('proxy_on') || this.host === this.hostname;\n    let userIP;\n    let localIP = '127.0.0.1';\n    if (proxy) {\n      if (forward) {\n        return (this.headers['x-forwarded-for'] || '').split(',').filter(item => {\n          item = item.trim();\n          if (think.isIP(item)) {\n            return item;\n          }\n        });\n      }\n      userIP = this.headers['x-real-ip'];\n    }else{\n      let connection = this.req.connection;\n      let socket = this.req.socket;\n      if (connection && connection.remoteAddress !== localIP) {\n        userIP = connection.remoteAddress;\n      }else if (socket && socket.remoteAddress !== localIP) {\n        userIP = socket.remoteAddress;\n      }\n    }\n    if (!userIP) {\n      return localIP;\n    }\n    if (userIP.indexOf(':') > -1) {\n      userIP = userIP.split(':').slice(-1)[0];\n    }\n    if (!think.isIP(userIP)) {\n      return localIP;\n    }\n    return userIP;\n  }\n  /**\n   * get or set language\n   * @return {String}           []\n   */\n  lang(lang, asViewPath){\n    if(lang){\n      this._lang = lang;\n      this._langAsViewPath = asViewPath;\n      return;\n    }\n    //get from property\n    if(this._lang){\n      return this._lang;\n    }\n    //get from cookie\n    let key = this.config('locale').cookie_name;\n    let value = this.cookie(key);\n    if(value){\n      this._lang = value;\n      return value;\n    }\n    //get from header\n    lang = this.header('accept-language');\n    //language to lowercase\n    this._lang = (lang.split(',')[0] || '').toLowerCase();\n    return this._lang;\n  }\n  /**\n   * get or set theme\n   * @param  {String} theme []\n   * @return {String}       []\n   */\n  theme(theme){\n    if(theme){\n      this._theme = theme;\n      return;\n    }\n    return this._theme;\n  }\n  /**\n   * get or set cookie\n   * @param  {} name    []\n   * @param  {} value   []\n   * @param  {} options []\n   * @return {}         []\n   */\n  cookie(name, value, options){\n    //send cookies\n    if (name === true) {\n      if (think.isEmpty(this._sendCookie)) {\n        return;\n      }\n      let cookies = Object.values(this._sendCookie).map((item) => {\n        return cookie.stringify(item.name, item.value, item);\n      });\n      this.header('Set-Cookie', cookies);\n      this._sendCookie = {};\n      return;\n    }\n    //parse cookie\n    if(think.isEmpty(this._cookie) && this.headers.cookie){\n      this._cookie = cookie.parse(this.headers.cookie);\n    }\n    if (name === undefined) {\n      return this._cookie;\n    }else if (value === undefined) {\n      return this._cookie[name] || this._sendCookie[name] && this._sendCookie[name].value  || '';\n    }\n    //set cookie\n    if (typeof options === 'number') {\n      options = {timeout: options};\n    }\n    options = think.extend({}, this.config('cookie'), options);\n    if (value === null) {\n      options.timeout = -1000;\n    }\n    if (options.timeout !== 0) {\n      options.expires = new Date(Date.now() + options.timeout * 1000);\n    }\n    if(options.timeout > 0){\n      options.maxage = options.timeout;\n    }\n    options.name = name;\n    options.value = value;\n    this._sendCookie[name] = options;\n  }\n  /**\n   * redirect\n   * @param  {String} url  [redirect url]\n   * @param  {Number} code []\n   * @return {}      []\n   */\n  redirect(url, code){\n    this.res.statusCode = code || 302;\n    this.header('Location', url || '/');\n    this.end();\n  }\n  /**\n   * send time\n   * @param  {String} name [time type]\n   * @return {}      []\n   */\n  sendTime(name){\n    let time = Date.now() - this.startTime;\n    this.header('X-' + (name || 'EXEC-TIME'), time + 'ms');\n  }\n  /**\n   * output with success errno & errmsg\n   * @param  {Object} data    [output data]\n   * @param  {String} message [errmsg]\n   * @return {Promise}         [pedding promise]\n   */\n  success(data = '', message = ''){\n    let error = this.config('error');\n    let obj = {\n      [error.key]: 0,\n      [error.msg]: message,\n      data: data\n    };\n    this.type(this.config('json_content_type'));\n    this.end(obj);\n  }\n  /**\n   * output with fail errno & errmsg\n   * @param  {Number} errno  [error number]\n   * @param  {String} errmsg [error message]\n   * @param  {Object} data   [output data]\n   * @return {Promise}        [pedding promise]\n   */\n  fail(errno, errmsg = '', data = ''){\n    let obj;\n    let error = this.config('error');\n    if (think.isObject(errno)) {\n      obj = think.extend({}, errno);\n    }else{\n      if(/^[A-Z\\_]+$/.test(errno)){\n        let msg = this.locale(errno);\n        if(think.isArray(msg)){\n          errno = msg[0];\n          errmsg = msg[1];\n        }\n      }\n      if (!think.isNumber(errno)) {\n        data = errmsg;\n        errmsg = errno;\n        errno = error.default_errno;\n      }\n      //read errmsg from config/locale/[lang].js\n      if(!errmsg){\n        errmsg = this.locale(errno) || '';\n      }\n      obj = {\n        [error.key]: errno,\n        [error.msg]: errmsg\n      };\n      if(data){\n        obj.data = data;\n      }\n    }\n    this.type(this.config('json_content_type'));\n    this.end(obj);\n  }\n  /**\n   * output with jsonp\n   * @param  {Object} data [output data]\n   * @return {}      []\n   */\n  jsonp(data) {\n    this.type(this.config('json_content_type'));\n    let callback = this.get(this.config('callback_name'));\n    //remove unsafe chars\n    callback = callback.replace(/[^\\w\\.]/g, '');\n    if (callback) {\n      data = callback + '(' + (data !== undefined ? JSON.stringify(data) : '') + ')';\n    }\n    this.end(data);\n  }\n  /**\n   * output with json\n   * @param  {Object} data [output data]\n   * @return {Promise}      []\n   */\n  json(data){\n    this.type(this.config('json_content_type'));\n    this.end(data);\n  }\n  /**\n   * get view instance\n   * @return {Object} []\n   */\n  view(){\n    if (!this._view) {\n      let cls = think.require('view');\n      this._view = new cls(this);\n    }\n    return this._view;\n  }\n  /**\n   * set cache-control and expires header\n   * @return {} []\n   */\n  expires(time){\n    time = time * 1000;\n    let date = new Date(Date.now() + time);\n    this.header('Cache-Control', `max-age=${time}`);\n    this.header('Expires', date.toUTCString());\n  }\n  /**\n   * get locale value\n   * @param  {String} key []\n   * @return {String}     []\n   */\n  locale(){\n    return think.locale.apply(this, arguments);\n  }\n   /**\n   * get or set session\n   * @param  {String} name  [session name]\n   * @param  {mixed} value [session value]\n   * @return {Promise}       []\n   */\n  session(name, value) {\n    think.session(this);\n    let instance = this._session;\n    if (name === undefined) {\n      return instance.delete();\n    }\n    if (value !== undefined) {\n      return instance.set(name, value);\n    }\n    return instance.get(name);\n  }\n  /**\n   * write content\n   * @param  {mixed} obj      []\n   * @param  {String} encoding []\n   * @return {Promise}          []\n   */\n  write(obj, encoding = this.config('encoding')){\n    if(!this.res.connection){\n      return;\n    }\n    this.type(this.config('view.content_type'));\n    this.cookie(true);\n    if (obj === undefined) {\n      return;\n    }\n    if(think.isPromise(obj)){\n      //ignore Content-Type header before set\n      this._contentTypeIsSend = false;\n      throw new Error('can not write promise');\n    }\n    if (think.isArray(obj) || think.isObject(obj)) {\n      obj = JSON.stringify(obj);\n    }else if (!think.isBuffer(obj)) {\n      obj += '';\n    }\n    \n    //write after end\n    if(this._isEnd){\n      if(think.isBuffer(obj)){\n        think.log('write after end, content is buffer', 'WARNING');\n      }else{\n        let pos = obj.indexOf('\\n');\n        if(pos > -1){\n          obj = obj.slice(0, pos) + '...';\n        }\n        think.log('write after end, content is `' + obj + '`', 'WARNING');\n      }\n      return;\n    }\n    let outputConfig = this.config('output_content');\n    if (!outputConfig) {\n      return this.res.write(obj, encoding);\n    }\n    let fn = think.co.wrap(outputConfig);\n    let promise = fn(obj, encoding, this);\n    this._outputContentPromise.push(promise);\n  }\n  /**\n   * end\n   * @return {} []\n   */\n  _end(){\n    this.cookie(true);\n    this.res.end();\n    \n    process.nextTick(() => {\n      this._afterEnd();\n    });\n  }\n  /**\n   * after end\n   * @return {} []\n   */\n  _afterEnd(){\n    //flush session\n    if(this._session && this._session.flush){\n      this._session.flush();\n    }\n\n    //show request info\n    if(this.config('log_request') && !this._isResource){\n      think.log(colors => {\n        let msg = [\n          this.method, this.url,\n          colors.cyan(`${this.res.statusCode}`)\n        ].join(' ');\n        return msg;\n      }, 'HTTP', this.startTime);\n    }\n\n    //remove upload tmp files\n    if (!think.isEmpty(this._file)) {\n      var key, filepath;\n      for(key in this._file){\n        filepath = this._file[key].path;\n        if (think.isFile(filepath)) {\n          fs.unlink(filepath, () => {});\n        }\n      }\n    }\n  }\n  /**\n   * http end\n   * @return {} []\n   */\n  end(obj, encoding){\n    this.write(obj, encoding);\n    //set http end flag\n    this._isEnd = true;\n    if (!this._outputContentPromise.length) {\n      return this._end();\n    }\n\n    return Promise.all(this._outputContentPromise).then(() => {\n      this._outputContentPromise = [];\n      this._end();\n    }).catch(() => {\n      this._end();\n    });\n  }\n}"]}